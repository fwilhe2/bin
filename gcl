#!/usr/bin/env bash

# Wrapper for git clone to get a consistent directory layout

get_repo_path() {
    local repo_url=$1
    local base_dir=${2:-~/code}

    parsed_url=$(echo "$repo_url" | sed -E 's|https?://([^/]+)/(.*)|\1 \2|')
    repo_host=$(echo "$parsed_url" | awk '{print $1}')
    repo_path=$(echo "$parsed_url" | awk '{print $2}')

    echo "$(eval echo "$base_dir")/$repo_host/$repo_path"
}

clone_repo() {
    local repo_url=$1
    local base_dir=${2:-~/code}
    shift 2
    local git_args=("$@")

    repo_path=$(get_repo_path "$repo_url" "$base_dir")
    [ ! -d "$repo_path" ] && mkdir -p "$repo_path"

    git clone "$repo_url" "$repo_path" "${git_args[@]}"
}

main() {
    local repo_url
    local base_dir
    local git_args=()

    while [[ $# -gt 0 ]]; do
        case $1 in
            --base-dir)
                base_dir="$2"
                shift 2
                ;;
            *)
                if [[ -z "$repo_url" ]]; then
                    repo_url="$1"
                else
                    git_args+=("$1")
                fi
                shift
                ;;
        esac
    done

    base_dir=${base_dir:-${GCL_BASE_DIR:-~/code}}

    clone_repo "$repo_url" "$base_dir" "${git_args[@]}"
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi
