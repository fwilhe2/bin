#!/bin/bash
set -euo pipefail

# Based on https://wiki.ubuntuusers.de/Skripte/Backup_mit_RSYNC#Beispiel-Minimal-Variante
# Trying to follow practices described in https://jmmv.dev/series.html#Shell%20readability

readonly SCRIPT_NAME="${0##*/}"
readonly SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"

usage() {
    echo "Usage: $SCRIPT_NAME [-s source_dir] [-e exclude_file] [-n] /path/to/backup/dir"
    echo "  -s  Source directory to back up (default: ~)"
    echo "  -e  Exclude file (default: backup-exclude.txt in script dir)"
    echo "  -n  Dry run (show what would be done)"
    exit 1
}

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $*"
}

perform_backup() {
    local source="$1"
    local target="$2"
    local today="$3"
    local exclude_file="$4"
    local dry_run="$5"

    local rsync_opts="--archive --relative --progress --delete --delete-excluded --exclude-from=\"$exclude_file\""
    local dest="${target}/backup-$(hostname)-${today}/"
    local link_dest="--link-dest=\"${target}/backup-$(hostname)-latest/\""

    if [[ "$dry_run" == "true" ]]; then
        log "Dry-run: rsync $rsync_opts \"$source\" \"$dest\" $link_dest"
        log "Dry-run: ln -nsf \"$dest\" \"${target}/backup-$(hostname)-latest\""
    else
        log "Running rsync..."
        eval rsync $rsync_opts "$source" "$dest" $link_dest
        log "Updating latest symlink..."
        ln -nsf "$dest" "${target}/backup-$(hostname)-latest"
        log "Backup completed."
    fi
}

main() {
    local source="$HOME"
    local exclude_file="$SCRIPT_DIR/backup-exclude.txt"
    local dry_run="false"

    while getopts ":s:e:n" opt; do
        case $opt in
            s) source="$OPTARG" ;;
            e) exclude_file="$OPTARG" ;;
            n) dry_run="true" ;;
            *) usage ;;
        esac
    done
    shift $((OPTIND -1))

    if [[ $# -ne 1 ]]; then usage; fi
    local target="$1"

    if [[ ! -d "$target" ]]; then
        echo "$target is not a directory!"
        exit 1
    fi
    if [[ ! -e "$exclude_file" ]]; then
        echo "Exclude file '$exclude_file' does not exist!"
        exit 1
    fi

    local today
    today=$(date +%Y-%m-%d)

    perform_backup "$source" "$target" "$today" "$exclude_file" "$dry_run"
}

main "$@"
